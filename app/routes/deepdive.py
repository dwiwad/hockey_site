from fastapi import APIRouter, Request, HTTPExceptionfrom fastapi.responses import HTMLResponsefrom fastapi.templating import Jinja2Templatesimport ostemplates = Jinja2Templates(directory="templates")deepdive_router = APIRouter()# -----------------------------------------------------------------------# Route: Deep Dives Page ('/deep-dives')# Loads templates/deep-dives/index.html# -----------------------------------------------------------------------@deepdive_router.get("/", response_class=HTMLResponse)async def deep_dives_home(request: Request):    return templates.TemplateResponse("deep-dives/index.html", {"request": request})# -----------------------------------------------------------------------# Route: Specific Deep Dives# Loads Dynamically loads Deep Dive posts# -----------------------------------------------------------------------@deepdive_router.get("/{slug}", response_class=HTMLResponse)async def deep_dive_post(request: Request, slug: str):    template_path = f"deep-dives/{slug}.html"    full_path = os.path.join("templates", template_path)        if not os.path.isfile(full_path):        raise HTTPException(status_code=404, detail="Post not found.")        return templates.TemplateResponse(template_path, {"request": request})